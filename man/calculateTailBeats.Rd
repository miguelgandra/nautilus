% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculateTailBeats.R
\name{calculateTailBeats}
\alias{calculateTailBeats}
\title{Calculate Tail Beat Frequencies}
\usage{
calculateTailBeats(
  data,
  id.col = "ID",
  datetime.col = "datetime",
  motion.col = "sway",
  min.freq.Hz = 0.05,
  max.freq.Hz = 3,
  smooth.window = 10,
  max.rows.per.batch = 2e+05,
  ridge.only = FALSE,
  ridge.threshold = 0.1,
  power.ratio.threshold = NULL,
  max.interp.gap = 10,
  plot.wavelet = TRUE,
  plot.diagnostic = FALSE,
  plot.output.dir = NULL,
  png.width = 24,
  png.height = 6,
  png.res = 600,
  return.data = TRUE,
  save.files = FALSE,
  output.folder = NULL,
  output.suffix = NULL,
  n.cores = 1
)
}
\arguments{
\item{data}{A list of data.tables/data.frames, one for each individual; a single aggregated data.table/data.frame
containing data from multiple animals (with an 'ID' column); or a character vector of file paths pointing to
\code{.rds} files, each containing data for a single individual. When a character vector is provided,
files are loaded sequentially to optimize memory use. The output of the \link{processTagData} function
is strongly recommended, as it formats the data appropriately for all downstream analysis.}

\item{id.col}{Character. The name of the column identifying individuals (default: "ID").}

\item{datetime.col}{Character. The name of the column containing datetime information (default: "datetime").}

\item{motion.col}{Character. The name of the column containing motion data (e.g., "sway") to analyze.}

\item{min.freq.Hz}{Numeric. The lowest frequency of interest (in Hz). Default is 0.05 Hz.}

\item{max.freq.Hz}{Numeric. The highest frequency of interest (in Hz). Default is 3 Hz.}

\item{smooth.window}{Numeric. Window size (in seconds) for moving average smoothing of frequency estimates.
Set to 0 to disable smoothing. Default is 10 seconds.}

\item{max.rows.per.batch}{Numeric. Maximum number of rows to process in each batch when handling large datasets.
The function automatically determines optimal batch sizes based on frequency resolution requirements,
but this parameter sets an upper limit to prevent memory issues. Default is 200,000 rows.
Lower values reduce memory usage but may increase processing time for very large datasets.}

\item{ridge.only}{Logical. If TRUE, only returns frequencies identified as ridges (connected local maxima)
in the wavelet power spectrum. If FALSE (default), uses all local maxima in the power spectrum.}

\item{ridge.threshold}{Scale factor used in the ridge detection step via \code{WaveletComp::ridge()}.
A larger value results in a smoother ridge and potentially fewer oscillations detected,
while a smaller value increases sensitivity to local variations in the wavelet power spectrum.
Default is \code{0.1}.}

\item{power.ratio.threshold}{Numeric or NULL. Minimum ratio between peak power and average power (Peak-to-Average Power Ratio)
for a frequency to be considered valid. NULL disables this filter. Default is NULL.}

\item{max.interp.gap}{Numeric. Maximum gap (in seconds) for linear interpolation of missing frequency values.
Set to NULL to disable interpolation. Default is 10 seconds.}

\item{plot.wavelet}{Logical. Whether to generate wavelet power spectrum plots. Default is TRUE.}

\item{plot.diagnostic}{Logical. Whether to generate diagnostic time series plots showing tail beat
frequencies and power ratios. Default is FALSE.}

\item{plot.output.dir}{Character. If provided, all plots will be saved as PNG files in this directory instead of being displayed interactively.
Default is NULL (plots shown in R graphics device).}

\item{png.width}{Numeric. Width of PNG output in inches (default = 10).}

\item{png.height}{Numeric. Height of PNG output in inches (default = 7).}

\item{png.res}{Numeric. Resolution of PNG output in ppi (default = 300).}

\item{return.data}{Logical. Controls whether the function returns the processed data
as a list in memory. When processing large or numerous datasets, set to \code{FALSE} to reduce
memory usage. Note that either \code{return.data} or \code{save.files} must be \code{TRUE}
(or both). Default is \code{TRUE}.}

\item{save.files}{Logical. If \code{TRUE}, the processed data for each ID will be saved as RDS files
during the iteration process. This ensures that progress is saved incrementally, which can
help prevent data loss if the process is interrupted or stops midway. Default is \code{FALSE}.}

\item{output.folder}{Character. Path to the folder where the processed files will be saved.
This parameter is only used if \code{save.files = TRUE}. If \code{NULL}, the RDS file will be saved
in the data folder corresponding to each ID. Default is \code{NULL}.}

\item{output.suffix}{Character. A suffix to append to the file name when saving.
This parameter is only used if \code{save.files = TRUE}.

#' @return Depending on parameters:
\itemize{
\item If \code{return.data = TRUE} (default): Returns the input data with added columns \code{tbf_hz}
containing estimated tail beat frequencies in Hz, and \code{power_ratio}.
The \code{power_ratio} represents the ratio of the peak wavelet power at the estimated
\code{tbf_hz} to the average wavelet power across the relevant frequency spectrum,
providing a measure of the prominence of the tail beat frequency.
For list/file inputs, returns a list of modified data frames with results for each individual.
\item If \code{return.data = FALSE}: Returns \code{NULL} invisibly. Processed data will only be saved to
files if \code{save.files = TRUE}.
}}

\item{n.cores}{Number of CPU cores for parallel processing (default = 1)}
}
\value{
Depending on parameters:
\itemize{
\item If \code{return.data = TRUE} (default): Returns the input data with added column \code{tbf_hz}
containing estimated tail beat frequencies in Hz. For list/file inputs, returns a list of modified
data frames with results for each individual.
\item If \code{return.data = FALSE}: Returns \code{NULL} invisibly. Processed data will only be saved to
files if \code{save.files = TRUE}.
}
}
\description{
This function uses continuous wavelet transform (CWT) to estimate tail beat frequencies
from motion sensor data. It can process data from multiple individuals
in parallel and provides visualization of the power spectrum with identified tail beats.
It features intelligent batch processing with automatic buffer zones to handle large
datasets efficiently while maintaining accuracy at batch boundaries.
}
\details{
The function implements a comprehensive workflow for tail beat frequency estimation:

\strong{Frequency Detection Methods:}
\itemize{
\item \code{ridge.only = TRUE}: Conservative approach using only connected maxima (ridges)
in the wavelet power spectrum, identified via \code{WaveletComp::ridge()}. This method is
the most robust against noise but may miss weaker signals. The behaviour can be fine-tuned
with the \code{scale.factor} argument, which controls the smoothness of the ridge.
\item \code{ridge.only = FALSE}: More inclusive approach using all local maxima, with optional
quality filtering via \code{power.ratio.threshold}.
}

\strong{Quality Control:}
\itemize{
\item \code{power.ratio.threshold}: Filters frequencies where peak-to-average power ratio
is below threshold (recommended: 1.5-3 for typical data)

\item \code{smooth.window}: Applies temporal smoothing to reduce high-frequency variability
in estimates while preserving true behavioral patterns
}

\strong{Gap Handling:}
\itemize{
\item \code{max.interp.gap}: Intelligently fills short data gaps (< specified seconds) via
linear interpolation while preserving longer gaps as NA values. This maintains signal
continuity during brief measurement drops without over-interpolating prolonged gaps.
}

\strong{Intelligent Batch Processing:}
\itemize{
\item Automatically processes large datasets in memory-efficient batches when sampling frequency >1 Hz
\item Implements frequency-adaptive buffer zones (based on min.freq.Hz) to prevent edge artifacts
\item Seamlessly stitches results while maintaining temporal accuracy
}
}
\note{
The function requires the 'WaveletComp' package for the wavelet transform. For parallel processing,
it requires the 'foreach', 'doSNOW', and 'parallel' packages.

\strong{Sampling Frequency Requirements:}
The input data must have a sampling frequency (1/timestep) that satisfies the Nyquist criterion:
\itemize{
\item Minimum requirement: Sampling frequency > 2 x \code{max.freq.Hz}
\item Recommended: Sampling frequency ≥ 4 x \code{max.freq.Hz} for reliable results
\item Example: With \code{max.freq.Hz = 3}, data should be sampled at ≥ 12 Hz (minimum 6 Hz)
}#'
}
