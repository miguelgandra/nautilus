% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/processTagData.R
\name{processTagData}
\alias{processTagData}
\title{Import and Process Archival Tag Data}
\usage{
processTagData(
  data.folders,
  sensor.subdirectory = "CMD",
  wc.subdirectory = NULL,
  save.files = FALSE,
  output.folder = NULL,
  output.suffix = NULL,
  id.metadata,
  id.col = "ID",
  tag.col = "tag",
  deploy.date.col = "tagging_date",
  deploy.lon.col = "deploy_lon",
  deploy.lat.col = "deploy_lat",
  pop.date.col = "popup_data",
  pop.lon.col = "popup_lon",
  pop.lat.col = "popup_lat",
  axis.mapping = NULL,
  hard.iron.calibration = TRUE,
  soft.iron.calibration = TRUE,
  orientation.algorithm = "tilt_compass",
  madgwick.beta = 0.02,
  dba.window = 3,
  dba.smoothing = 2,
  orientation.smoothing = 1,
  motion.smoothing = 1,
  speed.smoothing = 2,
  burst.quantiles = c(0.95, 0.99),
  downsample.to = 1,
  pitch.warning.threshold = 45,
  roll.warning.threshold = 45,
  check.time.anomalies = TRUE,
  timezone = "UTC",
  data.table.threads = NULL,
  verbose = TRUE
)
}
\arguments{
\item{data.folders}{Character vector. Paths to the folders containing data to be processed.
Each folder corresponds to an individual animal and should contain subdirectories with sensor data and possibly
additional (Wildlife Computers) tag data.}

\item{sensor.subdirectory}{Character. Name of the subdirectory within each animal folder that contains sensor data (default: "CMD").
This subdirectory should include the sensor CSV files for the corresponding animal.}

\item{wc.subdirectory}{Character or NULL. Name of the subdirectory within each animal folder that contains Wildlife Computers tag data
(e.g., MiniPAT, MK10, or SPOT tag data), or NULL to auto-detect tag folders (default: NULL).
This subdirectory should contain the "Locations.csv" file with position data from the tag.}

\item{save.files}{Logical. If \code{TRUE}, the processed data for each ID will be saved as RDS files
during the iteration process. This ensures that progress is saved incrementally, which can
help prevent data loss if the process is interrupted or stops midway. Default is \code{FALSE}.}

\item{output.folder}{Character. Path to the folder where the processed files will be saved.
This parameter is only used if \code{save.files = TRUE}. If \code{NULL}, the RDS file will be saved
in the data folder corresponding to each ID. Default is \code{NULL}.}

\item{output.suffix}{Character. A suffix to append to the file name when saving.
This parameter is only used if \code{save.files = TRUE}. If \code{NULL}, a suffix based on the sampling
rate (e.g., \verb{-100Hz}) will be used. Default is \code{NULL}.}

\item{id.metadata}{Data frame. Metadata about the IDs to associate with the processed data.
Must contain at least columns for ID and tag type.}

\item{id.col}{Character. Column name for ID in \code{id.metadata} (default: "ID").}

\item{tag.col}{Character. Column name for the tag type in \code{id.metadata} (default: "tag").}

\item{deploy.date.col}{Character. Column name for the tagging date in \code{id.metadata} (default: "tagging_date").}

\item{deploy.lon.col}{Character. Column name for longitude in sensor data (default: "deploy_lon").}

\item{deploy.lat.col}{Character. Column name for latitude in sensor data (default: "deploy_lat").}

\item{pop.date.col}{Character. Column name for the popup date in \code{id.metadata} (default: "popup_date").}

\item{pop.lon.col}{Character. Column name for popup longitude in sensor data (default: "popup_lon").}

\item{pop.lat.col}{Character. Column name for popup latitude in sensor data (default: "popup_lat").}

\item{axis.mapping}{Optional. A data frame containing the axis transformations for the IMU (Inertial Measurement Unit).
This parameter is used to correctly configure the IMU axes to match the North-East-Down (NED) frame
or to mark faulty sensor data as NA.
The data frame should have three columns:
\itemize{
\item \emph{type}: A column specifying the tag type (\code{CAM} vs \code{CMD}).
\item \emph{tag}: A column specifying the tag or sensor identifier. The tags indicated in this column should match the tag types in the \code{id.metadata} data frame.
\item \emph{from}: A column indicating the original axis in the sensor's coordinate system.
\item \emph{to}: A column specifying the target axis in the desired coordinate system.
}
Both signal and swap transformations are allowed. Transformations can be defined for different tags in case multiple tags were used.}

\item{hard.iron.calibration}{Logical. Whether to apply hard-iron calibration (offset correction) to magnetometer data.
Default is TRUE.}

\item{soft.iron.calibration}{Logical. Whether to apply soft-iron calibration (scaling and misalignment correction) to magnetometer data.
Default is TRUE.}

\item{orientation.algorithm}{Orientation estimation algorithm:
\itemize{
\item \code{"tilt_compass"} (default): Lightweight 6-axis tilt-compensated compass.
\item \code{"madgwick"}: High-accuracy 9-axis sensor fusion. Requires Python \code{AHRS} module.
}}

\item{madgwick.beta}{Numeric. The Madgwick filter's gain parameter (default: 0.1).
This parameter controls the trade-off between gyroscope and accelerometer measurements.
\itemize{
\item Higher values (e.g., 0.2-0.3) trust the accelerometer more, leading to faster convergence but potentially more noise
\item Lower values (e.g., 0.01-0.05) trust the gyroscope more, resulting in smoother but potentially slower convergence
}
Only used when \code{orientation.algorithm = "madgwick"}.}

\item{dba.window}{Integer. Window size (in seconds) for calculating dynamic body acceleration. Defaults to 3.}

\item{dba.smoothing}{Optional. Smoothing window (in seconds) for VeDBA/ODBA metrics.
Uses arithmetic mean. Set to NULL to disable. Default: 2.}

\item{orientation.smoothing}{Optional. Smoothing window (in seconds) for orientation metrics (roll, pitch, heading).
Uses circular mean. Set to NULL to disable. Default: 1.}

\item{motion.smoothing}{Optional. Smoothing window (in seconds) for linear motion metrics (surge, sway, heave).
Uses arithmetic mean. Set to NULL to disable. Default: 1.}

\item{speed.smoothing}{Optional. Smoothing window (in seconds) for vertical speed.
Uses arithmetic mean. Set to NULL to disable. Default: 2.}

\item{burst.quantiles}{Numeric vector. Quantiles (0-1) to define burst swimming events based on acceleration thresholds.
Use NULL to disable burst detection. Defaults to c(0.95, 0.99) (95th and 99th percentiles).}

\item{downsample.to}{Numeric. Downsampling frequency in Hz (e.g., 1 for 1 Hz) to reduce data resolution.
Use NULL to retain the original resolution. Defaults to 1.}

\item{pitch.warning.threshold}{Numeric. Threshold (in degrees) for mean pitch values that trigger orientation warnings.
Default: 45 (will warn if mean |pitch| > 45 degrees).}

\item{roll.warning.threshold}{Numeric. Threshold (in degrees) for mean roll values that trigger orientation warnings.
Default: 45 (will warn if mean |roll| > 45 degrees).}

\item{check.time.anomalies}{Logical. Whether to check for and remove temporal gaps/discontinuities in the data.
Default: TRUE.}

\item{timezone}{Character string specifying the timezone for all datetime conversions.
Must be one of the valid timezones from \code{OlsonNames()}. Defaults to "UTC" (Coordinated Universal Time).}

\item{data.table.threads}{Integer or NULL. Specifies the number of threads
that data.table should use for parallelized operations. NULL (default): Uses data.table's current default threading.
Notes:
\itemize{
\item Optimal thread count depends on your CPU cores and data size
\item More threads use more RAM but can significantly speed up large operations
\item Can be permanently set via \code{data.table::setDTthreads()}
\item Current thread count: \code{data.table::getDTthreads()}
}}

\item{verbose}{Logical. If TRUE, the function will print detailed processing information. Defaults to TRUE.}
}
\value{
A list where each element contains the processed sensor data for an individual folder.
If location data from Wildlife Computers tags (e.g., MiniPATs, MK10s, SPOTs) is available,
it will be integrated and processed accordingly.
}
\description{
This function imports and processes high-resolution archival tag data from specified directories,
supporting sensor time series from multiple individuals. It utilizes \code{data.table::fread()} for fast
CSV reading and automatically computes a wide range of kinematic and orientation metrics from
accelerometer, magnetometer, and gyroscope signals (see the \emph{Details} section below for a complete list).
Orientation is estimated by default using the tilt-compensated compass method, which fuses accelerometer
and magnetometer data to determine body orientation relative to gravity and magnetic north.
Optionally, a more advanced sensor fusion approach using the Madgwick filter can be applied.
A full 3D magnetic calibration can be applied prior to orientation estimation, including both
hard iron (offset) and soft iron (scaling and misalignment) corrections.
Optionally, the function also integrates location data from Wildlife Computers tags
(MiniPATs, MK10s, SPOTs) if available. These should be provided in a dedicated subfolder
(e.g., "SPOT") under each individual's directory. Deployment and pop-up coordinates are
also extracted from metadata (if available) and included in the output dataset.
After metric computation, the data can be downsampled to reduce its resolution and
size for downstream analysis.
Note: Python and the associated libraries \code{AHRS} and \code{numpy} (accessible via \code{reticulate}) are required
if orientation is estimated using the Madgwick filter.
}
\details{
This function computes a suite of movement and orientation metrics from high-frequency tri-axial sensor data,
including acceleration, orientation, and linear motion parameters. It also performs automatic magnetic calibration
to improve heading estimation.

\strong{Acceleration:}
\itemize{
\item Total Acceleration (g): The total magnitude of the animal's acceleration, calculated from the three orthogonal accelerometer components.
\item Vectorial Dynamic Body Acceleration (VeDBA) (g): Quantifies the physical acceleration of the animal, calculated as the vector magnitude of the dynamic body acceleration, which is the difference between raw accelerometer data and the moving average (static acceleration).
\item Overall Dynamic Body Acceleration (ODBA) (g): A scalar measure of the animal's overall acceleration, calculated as the sum of the absolute values of the dynamic acceleration components along the X, Y, and Z axes.
\item Burst Swimming Events: Identifies periods of high acceleration based on a given acceleration magnitude percentile, which can be used to detect burst swimming behavior. This metric is binary, indicating whether the acceleration exceeds the threshold.
}

\strong{Orientation:}

Computed using sensor fusion algorithms:
\itemize{
\item {Tilt-compensated compass} (default): A lightweight 6-axis fusion (accelerometer + magnetometer)
to compute roll, pitch, and heading. The method first calculates tilt angles from accelerometer data,
then compensates the magnetometer readings using these angles to compute a more accurate heading.
This approach avoids gyroscope drift but may be affected by magnetic disturbances.
\item {Madgwick filter}: A 9-axis fusion algorithm (accelerometer + gyroscope + magnetometer)
implementing Sebastian Madgwick's quaternion-based gradient descent
approach. This provides absolute orientation reference by incorporating
Earth's magnetic field and is more robust to transient disturbances,
at the cost of higher computational complexity.
}
Output includes:
\itemize{
\item Roll (degrees): Rotational movement of the animal around its longitudinal (x) axis.
\item Pitch (degrees): Rotational movement of the animal around its lateral (y) axis.
\item Heading (degrees): Directional orientation of the animal, representing the compass heading.
Heading is corrected based on the deployment coordinates using global geomagnetic declination models.
}

\strong{Linear Motion:}
\itemize{
\item Surge (g): The forward-backward linear movement of the animal along its body axis, derived from the accelerometer data.
\item Sway (g): The side-to-side linear movement along the lateral axis of the animal, also derived from the accelerometer data.
\item Heave (g): The vertical linear movement of the animal along the vertical axis, estimated from accelerometer data.
\item Vertical Speed (m/s): The vertical velocity of the animal, representing the speed at which the animal is moving vertically in the water column.
Calculated as the difference in depth measurements divided by the time interval
}

\strong{Python Requirements}
\itemize{
\item Requires the \code{reticulate} R package for interfacing with Python.
\item The active Python environment must include the \code{AHRS} and \code{numpy} modules.
\item If unavailable, the function will return an informative error with installation guidance.
}
}
