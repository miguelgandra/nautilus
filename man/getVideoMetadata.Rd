% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getVideoMetadata.R
\name{getVideoMetadata}
\alias{getVideoMetadata}
\title{Extract Metadata and Timestamps from Biologging Tag Video Files}
\usage{
getVideoMetadata(
  video.folders,
  video.format = "mp4",
  tesseract.model = "cam",
  validate.timestamps = TRUE,
  max.validation.attempts = 6,
  expected.gap.range = c(0, 60),
  gap.tolerance = 2,
  use.parallel = TRUE,
  n.cores = NULL
)
}
\arguments{
\item{video.folders}{Character vector. Paths to directories containing video files.}

\item{video.format}{Character vector. Allowed video formats, such as "mp4" or "mov". Defaults to "mp4".}

\item{tesseract.model}{Character string. Language or configuration used by the OCR engine for recognizing
text in timestamp overlays. Defaults to "cam", indicating a predefined configuration for the target tag type.}

\item{validate.timestamps}{Logical. Whether to perform temporal validation using multiple frames. Defaults to TRUE.}

\item{max.validation.attempts}{Integer. Maximum number of frame extractions to attempt for validation. Defaults to 6.}

\item{expected.gap.range}{Numeric vector of length 2. Expected range (in seconds) for gaps between video files. Defaults to c(10, 60).}

\item{gap.tolerance}{Numeric. Tolerance factor for gap validation (multiplier). Defaults to 2.0.}

\item{use.parallel}{Logical. Whether to use parallel processing. Defaults to TRUE.}

\item{n.cores}{Integer. Number of cores to use for parallel processing. If NULL, uses detectCores() - 1.}
}
\value{
A data frame containing metadata for each video file with enhanced validation metrics.
}
\description{
This function extracts key metadata from video files located within specified
directories. The extracted metadata includes the start time, end time, duration,
and frame rate of the videos. It is specifically designed to process videos
from biologging tags that feature a black timestamp box positioned in the
bottom-right corner of the frames.

The function extracts individual frames using FFMPEG and employs Optical
Character Recognition (OCR) via the Tesseract engine to read the timestamps
embedded in the video frames. FFMPEG is also used to retrieve video information
such as frame rate and duration.

Because the timestamp box position is hardcoded and fixed, this function may
not be suitable for videos from biologging tags with different configurations,
timestamp placements, or video formats. Users should verify compatibility with
their specific video data prior to use.

The function supports parallel processing to speed up metadata extraction from
large datasets. It also implements improved validation strategies based on
inter-video timing patterns, using gap-based checks to detect and correct
timestamp inconsistencies.
}
